project_name: tenv
version: 1

before:
  hooks:
    - go mod tidy
    - go test ./...
    - go get -u ./cmd/tenv
    - go get -u ./cmd/tofu
    - go get -u ./cmd/terraform
    - go get -u ./cmd/terragrunt

builds:
  - id: tenv
    main: ./cmd/tenv
    binary: tenv
    env:
      - CGO_ENABLED=0

    ldflags:
      - -s -w -X main.version={{.Tag}}
    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: 386
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: 386
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64

  - id: tofu
    binary: tofu
    main: ./cmd/tofu
    env:
      - CGO_ENABLED=0

    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: 386
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: 386
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64

  - id: terraform
    binary: terraform
    main: ./cmd/terraform
    env:
      - CGO_ENABLED=0

    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: 386
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: 386
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64

  - id: terragrunt
    binary: terragrunt
    main: ./cmd/terragrunt
    env:
      - CGO_ENABLED=0

    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: 386
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: 386
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- .Tag }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

release:
  name_template: "Release {{.Tag}}"

changelog:
  use: github-native
  sort: asc
  filters:
    exclude:
      - "^test:"

checksum:
  name_template: "{{ .ProjectName }}_{{ .Tag }}_checksums.txt"
  algorithm: sha256

nfpms:
  - file_name_template: "{{ .ProjectName }}_{{- .Tag }}_{{ .Arch }}"
    maintainer: "https://github.com/dvaumoron"
    homepage: https://github.com/tofuutils/tenv
    description: >-
      tenv helps manage several version of OpenTofu (https://opentofu.org) and Terraform (https://www.terraform.io/),
      tenv is the managing command and tofu and terraform are proxy commands.
    license: "Apache-2.0"
    formats:
      - deb
      - rpm
      - apk
      - archlinux
    bindir: /usr/bin
    section: default
    contents:
      - src: ./LICENSE
        dst: /usr/share/doc/tenv/copyright
        file_info:
          mode: 0444
    rpm:
      packager: tofuutils <tofuutils@gmail.com>
      signature:
        key_file: '{{ if index .Env "GPG_KEY_FILE"  }}{{.Env.GPG_KEY_FILE}}{{ end }}'
    deb:
      signature:
        key_file: '{{ if index .Env "GPG_KEY_FILE"  }}{{.Env.GPG_KEY_FILE}}{{ end }}'
    apk:
      signature:
        key_file: '{{ if index .Env "GPG_KEY_FILE"  }}{{.Env.GPG_KEY_FILE}}{{ end }}'
    archlinux:
      pkgbase: tenv
      packager: tofuutils <tofuutils@gmail.com>

brews:
  - repository:
      owner: tofuutils
      name: homebrew-tap
    folder: Formula
    homepage: https://github.com/tofuutils/tenv
    description: "OpenTofu, Terraform and Terragrunt version manager, written in Go"
    license: "Apache-2.0"
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"

aurs:
  - name: tenv
    homepage: https://github.com/tofuutils/tenv
    description: "OpenTofu, Terraform and Terragrunt version manager, written in Go"
    maintainers:
      - "Alexander Sharov <https://github.com/kvendingoldo>"
    license: "Apache-2.0"
    private_key: "{{ .Env.AUR_KEY }}"
    git_url: "ssh://aur@aur.archlinux.org/tenv.git"
    skip_upload: false
    conflicts:
      - terraform
      - opentofu

    depends:
      - cosign-git

    package: |-
      # bin
      install -Dm755 "./mybin" "${pkgdir}/usr/bin/mybin"

      # license
      install -Dm644 "./LICENSE.md" "${pkgdir}/usr/share/licenses/mybin/LICENSE"

      # completions
      mkdir -p "${pkgdir}/usr/share/bash-completion/completions/"
      mkdir -p "${pkgdir}/usr/share/zsh/site-functions/"
      mkdir -p "${pkgdir}/usr/share/fish/vendor_completions.d/"
      install -Dm644 "./completions/mybin.bash" "${pkgdir}/usr/share/bash-completion/completions/mybin"
      install -Dm644 "./completions/mybin.zsh" "${pkgdir}/usr/share/zsh/site-functions/_mybin"
      install -Dm644 "./completions/mybin.fish" "${pkgdir}/usr/share/fish/vendor_completions.d/mybin.fish"

      # man pages
      install -Dm644 "./manpages/mybin.1.gz" "${pkgdir}/usr/share/man/man1/mybin.1.gz"

    # Git author used to commit to the repository.
    commit_author:
      name: tofuutils
      email: tofuutils@gmail.com

    # Commit message.
    #
    # Default: 'Update to {{ .Tag }}'
    # Templates: allowed
    commit_msg_template: "pkgbuild updates"

    # If you build for multiple GOAMD64 versions, you may use this to choose which one to use.
    #
    # Default: 'v1'.
    goamd64: v2

    # The value to be passed to `GIT_SSH_COMMAND`.
    # This is mainly used to specify the SSH private key used to pull/push to
    # the Git URL.
    #
    # Default: 'ssh -i {{ .KeyPath }} -o StrictHostKeyChecking=accept-new -F /dev/null'
    git_ssh_command: "ssh -i {{ .Env.KEY }} -o SomeOption=yes"

    # URL which is determined by the given Token
    # (github, gitlab or gitea).
    #
    # Default: depends on the client
    # Templates: allowed
    url_template: "http://github.mycompany.com/foo/bar/releases/{{ .Tag }}/{{ .ArtifactName }}"

    # Directory in which the files will be created inside the repository.
    # Only useful if you're creating your own AUR with multiple packages in a
    # single repository.
    #
    # Default: .
    # Templates: allowed
    # Since: v1.23
    directory: "."
