project_name: tenv
version: 1

before:
  hooks:
    - go mod tidy
    - go test ./...
    - go get -u ./cmd/tenv
    - go get -u ./cmd/tofu
    - go get -u ./cmd/terraform
    - go get -u ./cmd/terragrunt
    - go get -u ./cmd/tf

builds:
  - id: tenv
    main: ./cmd/tenv
    binary: tenv
    env:
      - CGO_ENABLED=0

    ldflags:
      - -s -w -X main.version={{.Tag}}
    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: "386"
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64

  - id: tofu
    binary: tofu
    main: ./cmd/tofu
    env:
      - CGO_ENABLED=0

    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: "386"
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64

  - id: terraform
    binary: terraform
    main: ./cmd/terraform
    env:
      - CGO_ENABLED=0

    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: "386"
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64

  - id: terragrunt
    binary: terragrunt
    main: ./cmd/terragrunt
    env:
      - CGO_ENABLED=0

    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: "386"
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64

  - id: tf
    binary: tf
    main: ./cmd/tf
    env:
      - CGO_ENABLED=0

    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - solaris

    goarch:
      - "386"
      - amd64
      - arm
      - arm64

    ignore:
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
      - goos: solaris
        goarch: "386"
      - goos: solaris
        goarch: arm
      - goos: solaris
        goarch: arm64

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- .Tag }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

release:
  name_template: "Release {{.Tag}}"

changelog:
  use: github-native
  sort: asc
  filters:
    exclude:
      - "^test:"

checksum:
  name_template: "{{ .ProjectName }}_{{ .Tag }}_checksums.txt"
  algorithm: sha256

nfpms:
  - file_name_template: "{{ .ProjectName }}_{{- .Tag }}_{{ .Arch }}"
    maintainer: "https://github.com/dvaumoron"
    homepage: https://github.com/tofuutils/tenv
    description: >-
      tenv helps manage several version of OpenTofu (https://opentofu.org) and Terraform (https://www.terraform.io/),
      tenv is the managing command and tofu and terraform are proxy commands.
    license: "Apache-2.0"
    formats:
      - deb
      - rpm
      - apk
      - archlinux
    bindir: /usr/bin
    section: default
    contents:
      - src: ./LICENSE
        dst: /usr/share/doc/tenv/copyright
        file_info:
          mode: 0444
    rpm:
      packager: tofuutils <tofuutils@gmail.com>
      signature:
        key_file: '{{ if index .Env "GPG_KEY_FILE"  }}{{.Env.GPG_KEY_FILE}}{{ end }}'
    deb:
      signature:
        key_file: '{{ if index .Env "GPG_KEY_FILE"  }}{{.Env.GPG_KEY_FILE}}{{ end }}'
    apk:
      signature:
        key_file: '{{ if index .Env "GPG_KEY_FILE"  }}{{.Env.GPG_KEY_FILE}}{{ end }}'
    archlinux:
      pkgbase: tenv
      packager: tofuutils <tofuutils@gmail.com>

brews:
  - repository:
      owner: tofuutils
      name: homebrew-tap
    folder: Formula
    homepage: https://github.com/tofuutils/tenv
    description: "OpenTofu and Terraform version manager (inspired by tofuenv, written in Go)"
    license: "Apache-2.0"
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
# chocolateys:
#   - name: tenv
#     # Empty means all IDs.
#     ids: []
#     owners: tofuutils
#     title: tenv
#     authors: tofuutils
#     project_url: https://github.com/tofuutils/tenv
#     url_template: https://github.com/tofuutils/tenv/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
#     # App's icon.
#     icon_url: ""
#     copyright: 2024 tofuutils authors
#     license_url: https://github.com/tofuutils/tenv/blob/main/LICENSE
#     require_license_acceptance: false
#     project_source_url: https://github.com/tofuutils/tenv
#     docs_url: https://github.com/tofuutils/tenv/blob/main/README.md
#     tags: "terraform opentofu terragrunt tofuenv tfenv tenv"
#     summary: OpenTofu, Terraform and Terragrunt version manager, written in Go.
#     description: |
#       OpenTofu, Terraform and Terragrunt version manager, written in Go.
#     release_notes: "https://github.com/tofuutils/tenv/releases/tag/v{{ .Version }}"
#     dependencies:
#       - id: nfpm
#         version: 2.20.0
#     api_key: "{{ .Env.CHOCOLATEY_API_KEY }}"
#     source_repo: "https://push.chocolatey.org/"
#     skip_publish: false
#     goamd64: v1
